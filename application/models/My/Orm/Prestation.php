<?php

/**
 * My_Orm_Prestation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class My_Orm_Prestation extends My_Entity_Prestation {

    public static function find($pIdentifiant) {
        $oPrestation = Doctrine::getTable('My_Orm_Prestation')
                ->createQuery('p')
                ->innerJoin('p.Scene as s')
                ->innerJoin('p.Artiste as a')
                ->innerJoin('p.Edition as e')
                ->innerJoin('p.PrestationMusique as pm')
                ->where('p.Identifiant = ?', $pIdentifiant)
                ->fetchOne();

        if ($oPrestation == false) {
            return null;
        }

        return $oPrestation;
    }

    public static function findAll() {
        $aPrestation = Doctrine::getTable('My_Orm_Prestation')
                ->createQuery('p')
                ->innerJoin('p.Scene as s')
                ->innerJoin('p.Artiste as a')
                ->innerJoin('p.PrestationMusique as pm')
                ->execute();

        if ($aPrestation == false) {
            return null;
        }

        return $aPrestation;
    }

    public static function findAllByEdition($pIdentifiantEdition) {
        $aPrestation = Doctrine::getTable('My_Orm_Prestation')
                ->createQuery('p')
                ->innerJoin('p.Scene as s')
                ->innerJoin('p.Artiste as a')
                ->innerJoin('p.PrestationMusique as pm')
                ->where('p.IdentifiantEdition = ?', $pIdentifiantEdition)
                ->execute();

        if ($aPrestation == false) {
            return null;
        }

        return $aPrestation;
    }

    public static function findAllByEditionDay($pIdentifiantEdition, $pPrestationDay) {
        $aPrestation = Doctrine::getTable('My_Orm_Prestation')
                ->createQuery('p')
                ->innerJoin('p.Scene as s')
                ->innerJoin('p.Artiste as a')
                ->innerJoin('p.PrestationMusique as pm')
                ->where('p.IdentifiantEdition = ?', $pIdentifiantEdition)
                ->andWhere('p.JourPassage = ?', $pPrestationDay)
                ->fetchArray();

        if ($aPrestation == false) {
            return null;
        }

        return $aPrestation;
    }

}
